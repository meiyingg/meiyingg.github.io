<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>蓝桥杯算法比赛笔记</title>
    <link href="/2021/01/09/%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%AC%94%E8%AE%B0%E6%9C%AC/"/>
    <url>/2021/01/09/%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%AC%94%E8%AE%B0%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<h1 id="递归与递推"><a href="#递归与递推" class="headerlink" title="递归与递推"></a>递归与递推</h1><h2 id="递归实现指数型枚举"><a href="#递归实现指数型枚举" class="headerlink" title="递归实现指数型枚举"></a>递归实现指数型枚举</h2><blockquote><p>从 1∼n 这 n 个整数中随机选取任意多个，输出所有可能的选择方案。</p><p>就是判断选和不选</p></blockquote><p><a href="https://www.acwing.com/problem/content/94/">92. 递归实现指数型枚举 - AcWing题库</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><br><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> N=<span class="hljs-number">16</span>;<br><br><span class="hljs-keyword">int</span> n;<br><br><span class="hljs-keyword">int</span> state[N];<span class="hljs-comment">//0表示无数据,1表示×，2表示√</span><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-keyword">int</span> current)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span>(current&gt;n)<span class="hljs-comment">//边界判断，到边界了就把数据输出</span><br>    &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=current;i++)<span class="hljs-comment">//注意等于号</span><br>        &#123;<br>            <span class="hljs-keyword">if</span>(state[i]==<span class="hljs-number">2</span>)<br>                <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>,i);<span class="hljs-comment">//用i表示第i个数的状态</span><br>        &#125;<br>        <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <br>    state[current]=<span class="hljs-number">1</span>;<br>    dfs(current+<span class="hljs-number">1</span>);<br>    state[current]=<span class="hljs-number">0</span>;<br>    <br>    state[current]=<span class="hljs-number">2</span>;<br>    dfs(current+<span class="hljs-number">1</span>);<br>    state[current]=<span class="hljs-number">0</span>;<br>    <br>    <span class="hljs-keyword">return</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;n);<br>    dfs(<span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="递归实现排列形枚举"><a href="#递归实现排列形枚举" class="headerlink" title="递归实现排列形枚举"></a>递归实现排列形枚举</h2><blockquote><p> 把 1∼n这 n 个整数排成一行后随机打乱顺序，输出所有可能的次序。</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><br><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> N=<span class="hljs-number">10</span>;<br><br><span class="hljs-keyword">int</span> n;<br><br><span class="hljs-keyword">int</span> states[N];<br><span class="hljs-keyword">bool</span> used[N];<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-keyword">int</span> current)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span>(current&gt;=n)<br>    &#123;<br>       <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=current;i++)<br>       &#123;<br>                <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,states[i]);<br>       &#125;<br>       <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;&quot;</span>);<br>       <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <br>    fot(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(!used[i])<br>        &#123;<br>            states[current]=i;<br>            used[i]=<span class="hljs-literal">true</span>;<br>            <br>            dfs(current+<span class="hljs-number">1</span>);<br>            used[i]=flase;<br>            states[current]=<span class="hljs-number">0</span>;<br>        &#125;<br>    &#125;<br>    <br>    <span class="hljs-keyword">return</span>;<br><br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;n);<br>    dfs(<span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="递归实现组合形枚举"><a href="#递归实现组合形枚举" class="headerlink" title="递归实现组合形枚举"></a>递归实现组合形枚举</h2><blockquote><p>从 1∼n 这 n 个整数中随机选出 m 个，输出所有可能的选择方案。</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><br><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> N=<span class="hljs-number">99</span>;<br><br><span class="hljs-keyword">int</span> n;<br><span class="hljs-keyword">int</span> m;<br><br><span class="hljs-keyword">int</span> stats[N];<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-keyword">int</span> current,<span class="hljs-keyword">int</span> start)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span>(current<span class="hljs-number">-1</span> + n-start+<span class="hljs-number">1</span>&lt;m) <span class="hljs-keyword">return</span>;<span class="hljs-comment">//剪枝，例如抽到1，5，之后，后面不需要抽了</span><br>    <span class="hljs-keyword">if</span>(current==m+<span class="hljs-number">1</span>)<br>    &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;current;i++)<br>        &#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>,stats[i]);<br>        &#125;<br>        <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=start;i&lt;=n;i++)<br>    &#123;<br>        stats[current]=i;<br>        dfs(current+<span class="hljs-number">1</span>,i+<span class="hljs-number">1</span>);<br>        stats[current]=<span class="hljs-number">0</span>;<br>    &#125;<br>     <span class="hljs-keyword">return</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d %d&quot;</span>,&amp;n,&amp;m);<br>    dfs(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><h1 id="基础算法"><a href="#基础算法" class="headerlink" title="基础算法"></a>基础算法</h1><blockquote><p>得背下来</p></blockquote><h2 id="快排"><a href="#快排" class="headerlink" title="快排"></a>快排</h2><blockquote><p>分治思想</p><p>不同于常规的，不是一次排序一个数，而是直接将某个数的俩测排好</p></blockquote><p><img src="https://xiaomai-aliyunoss.oss-cn-shenzhen.aliyuncs.com/img/20211118170025.jpg" alt="1258817-20190325195811497-310078615"></p><p><img src="https://xiaomai-aliyunoss.oss-cn-shenzhen.aliyuncs.com/img/20211118170836.gif" alt="5b56d02d73d145ca9be2c0431f1f6d68_tplv-k3u1fbpfcp-watermark (1)"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><br><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> N = <span class="hljs-number">1e6</span> + <span class="hljs-number">10</span>;<br><br><span class="hljs-keyword">int</span> n;<br><span class="hljs-keyword">int</span> q[N];<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">quick_sort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> q[],<span class="hljs-keyword">int</span> left,<span class="hljs-keyword">int</span> right)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span>(left&gt;=right) <span class="hljs-keyword">return</span> ;<br>    <span class="hljs-keyword">int</span> x=q[(left+right+<span class="hljs-number">1</span>)/<span class="hljs-number">2</span>],i=left<span class="hljs-number">-1</span>,j=right+<span class="hljs-number">1</span>;<span class="hljs-comment">//可换成x=q[(left+right)/2]</span><br>    <span class="hljs-keyword">while</span>(i&lt;j)<br>    &#123;<br>    <span class="hljs-keyword">do</span> i++ ;<span class="hljs-keyword">while</span>(q[i]&lt;x);<br>    <span class="hljs-keyword">do</span> j-- ;<span class="hljs-keyword">while</span>(q[j]&gt;x); <br>        <span class="hljs-keyword">if</span>(i&lt;j) swap(q[i],q[j]);<br>    &#125;<br>    <br>    quick_sort(q,left,i<span class="hljs-number">-1</span>);<span class="hljs-comment">//可换成j</span><br>    quick_sort(q,i,right);<span class="hljs-comment">//可换成j-1</span><br>    <br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;n);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++) <br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;q[i]);<br>    <br>    quick_sort(q,<span class="hljs-number">0</span>,n<span class="hljs-number">-1</span>);<br>    <br>   <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>,q[i]);<br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a><strong>归并排序</strong></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><br><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> N=<span class="hljs-number">1000010</span>;<br><br><span class="hljs-keyword">int</span> n;<br><span class="hljs-keyword">int</span> q[N],temp[N];<br><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">merge_sort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> q[],<span class="hljs-keyword">int</span> left,<span class="hljs-keyword">int</span> right)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span>(left&gt;=right) <span class="hljs-keyword">return</span> ;<br>    @WWWWWWWW*x<br>    <span class="hljs-keyword">int</span> mid=(left+right)/<span class="hljs-number">2</span>;[p;<span class="hljs-string">&#x27;p-=l.;;;;76&#x27;</span>]<br>    <br>    merge_sort(q,left,mid), merge_sort(q,mid+<span class="hljs-number">1</span>,right);<br>    <br>    <span class="hljs-keyword">int</span> x=<span class="hljs-number">0</span>,i=left,j=mid+<span class="hljs-number">1</span>;<br>    <br>    <span class="hljs-keyword">while</span>(i&lt;=mid&amp;&amp;j&lt;=right)<span class="hljs-comment">//注意这里的  &lt;=</span><br>        <span class="hljs-keyword">if</span>(q[i]&lt;=q[j]) temp[x++]=q[i++];<span class="hljs-comment">//注意这里的  &lt;=</span><br>        <span class="hljs-keyword">else</span> temp[x++]=q[j++];<br>    <span class="hljs-keyword">while</span>(i&lt;=mid) temp[x++]=q[i++];<span class="hljs-comment">//注意这里的  &lt;=</span><br>    <span class="hljs-keyword">while</span>(j&lt;=right) temp[x++]=q[j++];<span class="hljs-comment">//注意这里的  &lt;=</span><br>    <br>    <span class="hljs-keyword">for</span>(i=left,j=<span class="hljs-number">0</span>;i&lt;=right;i++,j++)<span class="hljs-comment">//注意这里的  &lt;=</span><br>        q[i]=temp[j];<br>    <br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;n);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;q[i]);<br>    <br>    merge_sort(q,<span class="hljs-number">0</span>,n<span class="hljs-number">-1</span>);<br>    <br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>,q[i]);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="二分"><a href="#二分" class="headerlink" title="二分"></a><strong>二分</strong></h2><h2 id="排列组合"><a href="#排列组合" class="headerlink" title="排列组合"></a><strong>排列组合</strong></h2><blockquote><p>排列：考虑顺序</p><p>组合：不考虑顺序</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-number">1</span>插入排序<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">insert_sort</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt; n; i ++ )<br>    &#123;<br>        <span class="hljs-keyword">int</span> x = a[i];<br>        <span class="hljs-keyword">int</span> j = i<span class="hljs-number">-1</span>;<br><br>        <span class="hljs-keyword">while</span> (j &gt;= <span class="hljs-number">0</span> &amp;&amp; x &lt; a[j])<br>        &#123;<br>            a[j+<span class="hljs-number">1</span>] = a[j];<br>            j -- ;<br>        &#125;<br>        a[j+<span class="hljs-number">1</span>] = x;<br>    &#125;<br>&#125;<br><span class="hljs-number">2</span>选择排序<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">select_sort</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i ++ )<br>    &#123;<br>        <span class="hljs-keyword">int</span> k = i;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = i+<span class="hljs-number">1</span>; j &lt; n; j ++ )<br>        &#123;<br>            <span class="hljs-keyword">if</span> (a[j] &lt; a[k])<br>                k = j;<br>        &#125;<br>        swap(a[i], a[k]);<br>    &#125;<br><br>&#125;<br><span class="hljs-number">3</span>冒泡排序<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">bubble_sort</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = n<span class="hljs-number">-1</span>; i &gt;= <span class="hljs-number">1</span>; i -- )<br>    &#123;<br>        <span class="hljs-keyword">bool</span> flag = <span class="hljs-literal">true</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">1</span>; j &lt;= i; j ++ )<br>            <span class="hljs-keyword">if</span> (a[j<span class="hljs-number">-1</span>] &gt; a[j])<br>            &#123;<br>                swap(a[j<span class="hljs-number">-1</span>], a[j]);<br>                flag = <span class="hljs-literal">false</span>;<br>            &#125;<br>        <span class="hljs-keyword">if</span> (flag) <span class="hljs-keyword">return</span>;<br>    &#125;<br>&#125;<br><span class="hljs-number">4</span>希尔排序<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">shell_sort</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> gap = n &gt;&gt; <span class="hljs-number">1</span>; gap; gap &gt;&gt;= <span class="hljs-number">1</span>)<br>    &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = gap; i &lt; n; i ++ )<br>        &#123;<br>            <span class="hljs-keyword">int</span> x = a[i];<br>            <span class="hljs-keyword">int</span> j;<br>            <span class="hljs-keyword">for</span> (j = i; j &gt;= gap &amp;&amp; a[j-gap] &gt; x; j -= gap)<br>                a[j] = a[j-gap];<br>            a[j] = x;<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-number">5</span>快速排序（最快）<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">quick_sort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> l, <span class="hljs-keyword">int</span> r)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span> (l &gt;= r) <span class="hljs-keyword">return</span> ;<br><br>    <span class="hljs-keyword">int</span> x = a[l+r&gt;&gt;<span class="hljs-number">1</span>], i = l<span class="hljs-number">-1</span>, j = r+<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span> (i &lt; j)<br>    &#123;<br>        <span class="hljs-keyword">while</span> (a[++ i] &lt; x);<br>        <span class="hljs-keyword">while</span> (a[-- j] &gt; x);<br>        <span class="hljs-keyword">if</span> (i &lt; j) swap(a[i], a[j]);<br>    &#125;<br>    sort(l, j), sort(j+<span class="hljs-number">1</span>, r);<br>&#125;<br><span class="hljs-number">6</span>归并排序<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">merge_sort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> l, <span class="hljs-keyword">int</span> r)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span> (l &gt;= r) <span class="hljs-keyword">return</span>;<br>    <span class="hljs-keyword">int</span> temp[N];<br>    <span class="hljs-keyword">int</span> mid = l+r&gt;&gt;<span class="hljs-number">1</span>;<br>    merge_sort(l, mid), merge_sort(mid+<span class="hljs-number">1</span>, r);<br>    <span class="hljs-keyword">int</span> k = <span class="hljs-number">0</span>, i = l, j = mid+<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span> (i &lt;= mid &amp;&amp; j &lt;= r)<br>    &#123;<br>        <span class="hljs-keyword">if</span> (a[i] &lt; a[j]) temp[k ++ ] = a[i ++ ];<br>        <span class="hljs-keyword">else</span> temp[k ++ ] = a[j ++ ];<br><br>    &#125;<br>    <span class="hljs-keyword">while</span> (i &lt;= mid) temp[k ++ ] = a[i ++ ];<br>    <span class="hljs-keyword">while</span> (j &lt;= r) temp[k ++ ] = a[j ++ ];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = l, j = <span class="hljs-number">0</span>; i &lt;= r; i ++ , j ++ ) a[i] = temp[j];<br>&#125;<br><span class="hljs-number">7</span>堆排序（须知此排序为使用了模拟堆，为了使最后一个非叶子节点的编号为n/<span class="hljs-number">2</span>，数组编号从<span class="hljs-number">1</span>开始）<br>https:<span class="hljs-comment">//www.cnblogs.com/wanglei5205/p/8733524.html</span><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">down</span><span class="hljs-params">(<span class="hljs-keyword">int</span> u)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> t = u;<br>    <span class="hljs-keyword">if</span> (u&lt;&lt;<span class="hljs-number">1</span> &lt;= n &amp;&amp; h[u&lt;&lt;<span class="hljs-number">1</span>] &lt; h[t]) t = u&lt;&lt;<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">if</span> ((u&lt;&lt;<span class="hljs-number">1</span>|<span class="hljs-number">1</span>) &lt;= n &amp;&amp; h[u&lt;&lt;<span class="hljs-number">1</span>|<span class="hljs-number">1</span>] &lt; h[t]) t = u&lt;&lt;<span class="hljs-number">1</span>|<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">if</span> (u != t)<br>    &#123;<br>        swap(h[u], h[t]);<br>        down(t);<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i ++ ) <span class="hljs-built_in">cin</span> &gt;&gt; h[i];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = n/<span class="hljs-number">2</span>; i; i -- ) down(i);<br>    <span class="hljs-keyword">while</span> (<span class="hljs-literal">true</span>)<br>    &#123;<br>        <span class="hljs-keyword">if</span> (!n) <span class="hljs-keyword">break</span>;<br>        <span class="hljs-built_in">cout</span> &lt;&lt; h[<span class="hljs-number">1</span>] &lt;&lt; <span class="hljs-string">&#x27; &#x27;</span>;<br>        h[<span class="hljs-number">1</span>] = h[n];<br>        n -- ;<br>        down(<span class="hljs-number">1</span>);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-number">8</span>基数排序<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">maxbit</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> maxv = a[<span class="hljs-number">0</span>];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt; n; i ++ )<br>        <span class="hljs-keyword">if</span> (maxv &lt; a[i])<br>            maxv = a[i];<br>    <span class="hljs-keyword">int</span> cnt = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span> (maxv &gt;= <span class="hljs-number">10</span>) maxv /= <span class="hljs-number">10</span>, cnt ++ ;<br><br>    <span class="hljs-keyword">return</span> cnt;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">radixsort</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> t = maxbit();<br>    <span class="hljs-keyword">int</span> radix = <span class="hljs-number">1</span>;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= t; i ++ )<br>    &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">10</span>; j ++ ) count[j] = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; n; j ++ )<br>        &#123;<br>            <span class="hljs-keyword">int</span> k = (a[j] / radix) % <span class="hljs-number">10</span>;<br>            count[k] ++ ;<br>        &#125;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">1</span>; j &lt; <span class="hljs-number">10</span>; j ++ ) count[j] += count[j<span class="hljs-number">-1</span>];<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = n<span class="hljs-number">-1</span>; j &gt;= <span class="hljs-number">0</span>; j -- )<br>        &#123;<br>            <span class="hljs-keyword">int</span> k = (a[j] / radix) % <span class="hljs-number">10</span>;<br>            temp[count[k]<span class="hljs-number">-1</span>] = a[j];<br>            count[k] -- ;<br>        &#125;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; n; j ++ ) a[j] = temp[j];<br>        radix *= <span class="hljs-number">10</span>;<br>    &#125;<br><br>&#125;<br><span class="hljs-number">9</span>计数排序<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">counting_sort</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> sorted[N];<br>    <span class="hljs-keyword">int</span> maxv = a[<span class="hljs-number">0</span>];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt; n; i ++ )<br>        <span class="hljs-keyword">if</span> (maxv &lt; a[i])<br>            maxv = a[i];<br>    <span class="hljs-keyword">int</span> count[maxv+<span class="hljs-number">1</span>];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i ++ ) count[a[i]] ++ ;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= maxv; i ++ ) count[i] += count[i<span class="hljs-number">-1</span>];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = n<span class="hljs-number">-1</span>; i &gt;= <span class="hljs-number">0</span>; i -- )<br>    &#123;<br>        sorted[count[a[i]]<span class="hljs-number">-1</span>] = a[i];<br>        count[a[i]] -- ;<br>    &#125;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i ++ ) a[i] = sorted[i];<br>&#125;<br><span class="hljs-number">10</span>桶排序（基数排序是桶排序的特例，优势是可以处理浮点数和负数，劣势是还要配合别的排序函数）<br><br><span class="hljs-function"><span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt; <span class="hljs-title">bucketSort</span><span class="hljs-params">(<span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt;&amp; nums)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> n = nums.size();<br>    <span class="hljs-keyword">int</span> maxv = *max_element(nums.begin(), nums.end());<br>    <span class="hljs-keyword">int</span> minv = *min_element(nums.begin(), nums.end());<br>    <span class="hljs-keyword">int</span> bs = <span class="hljs-number">1000</span>;<br>    <span class="hljs-keyword">int</span> m = (maxv-minv)/bs+<span class="hljs-number">1</span>;<br>    <span class="hljs-built_in">vector</span>&lt;<span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt; &gt; bucket(m);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; ++i) &#123;<br>        bucket[(nums[i]-minv)/bs].push_back(nums[i]);<br>    &#125;<br>    <span class="hljs-keyword">int</span> idx = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; m; ++i) &#123;<br>        <span class="hljs-keyword">int</span> sz = bucket[i].size();<br>        bucket[i] = quickSort(bucket[i]);<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; sz; ++j) &#123;<br>            nums[idx++] = bucket[i][j];<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> nums;<br>&#125;<br><br></code></pre></td></tr></table></figure><h1 id="细碎知识点"><a href="#细碎知识点" class="headerlink" title="细碎知识点"></a>细碎知识点</h1><h2 id="x的y次方"><a href="#x的y次方" class="headerlink" title="x的y次方"></a>x的y次方</h2><ul><li>#include&lt;math.h&gt;中pow(x,y)表示x的y次方,exp(x)表示e的x次方</li><li>100=1e2=1e+2</li></ul><h2 id="某些函数"><a href="#某些函数" class="headerlink" title="某些函数"></a>某些函数</h2><ul><li>memcpy(b,a,sezeof a)  作用是将a数组的数复制到到b数组里面</li><li>memset(a,0,sezeof a) 作用是将a数组所有字节都变成0</li></ul><h2 id="2的20次方"><a href="#2的20次方" class="headerlink" title="2的20次方"></a>2的20次方</h2><p>2的20次方等于1048576，约等于等于1M</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>算法笔记本</title>
    <link href="/2021/01/09/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0%E6%9C%AC/"/>
    <url>/2021/01/09/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<h1 id="算法笔记本"><a href="#算法笔记本" class="headerlink" title="算法笔记本"></a><strong>算法笔记本</strong></h1><h2 id="基础算法"><a href="#基础算法" class="headerlink" title="基础算法"></a>基础算法</h2><blockquote><p>得背下来</p></blockquote><h3 id="快排"><a href="#快排" class="headerlink" title="快排"></a>快排</h3><blockquote><p>分治思想</p><p>不同于常规的，不是一次排序一个数，而是直接将某个数的俩测排好</p></blockquote><p><img src="https://xiaomai-aliyunoss.oss-cn-shenzhen.aliyuncs.com/img/20211118170025.jpg" alt="1258817-20190325195811497-310078615"></p><p><img src="https://xiaomai-aliyunoss.oss-cn-shenzhen.aliyuncs.com/img/20211118170836.gif" alt="5b56d02d73d145ca9be2c0431f1f6d68_tplv-k3u1fbpfcp-watermark (1)"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><br><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> N = <span class="hljs-number">1e6</span> + <span class="hljs-number">10</span>;<br><br><span class="hljs-keyword">int</span> n;<br><span class="hljs-keyword">int</span> q[N];<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">quick_sort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> q[],<span class="hljs-keyword">int</span> left,<span class="hljs-keyword">int</span> right)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span>(left&gt;=right) <span class="hljs-keyword">return</span> ;<br>    <span class="hljs-keyword">int</span> x=q[(left+right+<span class="hljs-number">1</span>)/<span class="hljs-number">2</span>],i=left<span class="hljs-number">-1</span>,j=right+<span class="hljs-number">1</span>;<span class="hljs-comment">//可换成x=q[(left+right)/2]</span><br>    <span class="hljs-keyword">while</span>(i&lt;j)<br>    &#123;<br>    <span class="hljs-keyword">do</span> i++ ;<span class="hljs-keyword">while</span>(q[i]&lt;x);<br>    <span class="hljs-keyword">do</span> j-- ;<span class="hljs-keyword">while</span>(q[j]&gt;x); <br>        <span class="hljs-keyword">if</span>(i&lt;j) swap(q[i],q[j]);<br>    &#125;<br>    <br>    quick_sort(q,left,i<span class="hljs-number">-1</span>);<span class="hljs-comment">//可换成j</span><br>    quick_sort(q,i,right);<span class="hljs-comment">//可换成j-1</span><br>    <br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;n);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++) <br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;q[i]);<br>    <br>    quick_sort(q,<span class="hljs-number">0</span>,n<span class="hljs-number">-1</span>);<br>    <br>   <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>,q[i]);<br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a><strong>归并排序</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><br><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> N=<span class="hljs-number">1000010</span>;<br><br><span class="hljs-keyword">int</span> n;<br><span class="hljs-keyword">int</span> q[N],temp[N];<br><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">merge_sort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> q[],<span class="hljs-keyword">int</span> left,<span class="hljs-keyword">int</span> right)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span>(left&gt;=right) <span class="hljs-keyword">return</span> ;<br>    @WWWWWWWW*x<br>    <span class="hljs-keyword">int</span> mid=(left+right)/<span class="hljs-number">2</span>;[p;<span class="hljs-string">&#x27;p-=l.;;;;76&#x27;</span>]<br>    <br>    merge_sort(q,left,mid), merge_sort(q,mid+<span class="hljs-number">1</span>,right);<br>    <br>    <span class="hljs-keyword">int</span> x=<span class="hljs-number">0</span>,i=left,j=mid+<span class="hljs-number">1</span>;<br>    <br>    <span class="hljs-keyword">while</span>(i&lt;=mid&amp;&amp;j&lt;=right)<span class="hljs-comment">//注意这里的  &lt;=</span><br>        <span class="hljs-keyword">if</span>(q[i]&lt;=q[j]) temp[x++]=q[i++];<span class="hljs-comment">//注意这里的  &lt;=</span><br>        <span class="hljs-keyword">else</span> temp[x++]=q[j++];<br>    <span class="hljs-keyword">while</span>(i&lt;=mid) temp[x++]=q[i++];<span class="hljs-comment">//注意这里的  &lt;=</span><br>    <span class="hljs-keyword">while</span>(j&lt;=right) temp[x++]=q[j++];<span class="hljs-comment">//注意这里的  &lt;=</span><br>    <br>    <span class="hljs-keyword">for</span>(i=left,j=<span class="hljs-number">0</span>;i&lt;=right;i++,j++)<span class="hljs-comment">//注意这里的  &lt;=</span><br>        q[i]=temp[j];<br>    <br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;n);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;q[i]);<br>    <br>    merge_sort(q,<span class="hljs-number">0</span>,n<span class="hljs-number">-1</span>);<br>    <br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>,q[i]);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="二分"><a href="#二分" class="headerlink" title="二分"></a><strong>二分</strong></h3><h3 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a><strong>时间复杂度</strong></h3><blockquote><p> 一般ACM或者笔试题的时间限制是1秒或2秒。<br>在这种情况下，C++代码中的操作次数控制在 107∼108107∼108 为最佳。</p></blockquote><p>下面给出在不同数据范围下，代码的时间复杂度和算法该如何选择：</p><ul><li>n≤30n≤30, 指数级别, dfs+剪枝，状态压缩dp</li><li>n≤100n≤100 =&gt; O(n3)O(n3)，floyd，dp，高斯消元</li><li>n≤1000n≤1000 =&gt; O(n2)O(n2)，O(n2logn)O(n2logn)，dp，二分，朴素版Dijkstra、朴素版Prim、Bellman-Ford</li><li>n≤10000n≤10000 =&gt; O(n∗n√)O(n∗n)，块状链表、分块、莫队</li><li>n≤100000n≤100000 =&gt; O(nlogn)O(nlogn) =&gt; 各种sort，线段树、树状数组、set/map、heap、拓扑排序、dijkstra+heap、prim+heap、Kruskal、spfa、求凸包、求半平面交、二分、CDQ分治、整体二分、后缀数组、树链剖分、动态树</li><li>n≤1000000n≤1000000 =&gt; O(n)O(n), 以及常数较小的 O(nlogn)O(nlogn) 算法 =&gt; 单调队列、 hash、双指针扫描、并查集，kmp、AC自动机，常数比较小的 O(nlogn)O(nlogn) 的做法：sort、树状数组、heap、dijkstra、spfa</li><li>n≤10000000n≤10000000 =&gt; O(n)O(n)，双指针扫描、kmp、AC自动机、线性筛素数</li><li>n≤109n≤109 =&gt; O(n√)O(n)，判断质数</li><li>n≤1018n≤1018 =&gt; O(logn)O(logn)，最大公约数，快速幂，数位DP</li><li>n≤101000n≤101000 =&gt; O((logn)2)O((logn)2)，高精度加减乘除</li><li>n≤10100000n≤10100000 =&gt; O(logk×loglogk)，k表示位数O(logk×loglogk)，k表示位数，高精度加减、FFT/NTT</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-number">1</span>插入排序<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">insert_sort</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt; n; i ++ )<br>    &#123;<br>        <span class="hljs-keyword">int</span> x = a[i];<br>        <span class="hljs-keyword">int</span> j = i<span class="hljs-number">-1</span>;<br><br>        <span class="hljs-keyword">while</span> (j &gt;= <span class="hljs-number">0</span> &amp;&amp; x &lt; a[j])<br>        &#123;<br>            a[j+<span class="hljs-number">1</span>] = a[j];<br>            j -- ;<br>        &#125;<br>        a[j+<span class="hljs-number">1</span>] = x;<br>    &#125;<br>&#125;<br><span class="hljs-number">2</span>选择排序<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">select_sort</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i ++ )<br>    &#123;<br>        <span class="hljs-keyword">int</span> k = i;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = i+<span class="hljs-number">1</span>; j &lt; n; j ++ )<br>        &#123;<br>            <span class="hljs-keyword">if</span> (a[j] &lt; a[k])<br>                k = j;<br>        &#125;<br>        swap(a[i], a[k]);<br>    &#125;<br><br>&#125;<br><span class="hljs-number">3</span>冒泡排序<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">bubble_sort</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = n<span class="hljs-number">-1</span>; i &gt;= <span class="hljs-number">1</span>; i -- )<br>    &#123;<br>        <span class="hljs-keyword">bool</span> flag = <span class="hljs-literal">true</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">1</span>; j &lt;= i; j ++ )<br>            <span class="hljs-keyword">if</span> (a[j<span class="hljs-number">-1</span>] &gt; a[j])<br>            &#123;<br>                swap(a[j<span class="hljs-number">-1</span>], a[j]);<br>                flag = <span class="hljs-literal">false</span>;<br>            &#125;<br>        <span class="hljs-keyword">if</span> (flag) <span class="hljs-keyword">return</span>;<br>    &#125;<br>&#125;<br><span class="hljs-number">4</span>希尔排序<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">shell_sort</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> gap = n &gt;&gt; <span class="hljs-number">1</span>; gap; gap &gt;&gt;= <span class="hljs-number">1</span>)<br>    &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = gap; i &lt; n; i ++ )<br>        &#123;<br>            <span class="hljs-keyword">int</span> x = a[i];<br>            <span class="hljs-keyword">int</span> j;<br>            <span class="hljs-keyword">for</span> (j = i; j &gt;= gap &amp;&amp; a[j-gap] &gt; x; j -= gap)<br>                a[j] = a[j-gap];<br>            a[j] = x;<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-number">5</span>快速排序（最快）<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">quick_sort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> l, <span class="hljs-keyword">int</span> r)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span> (l &gt;= r) <span class="hljs-keyword">return</span> ;<br><br>    <span class="hljs-keyword">int</span> x = a[l+r&gt;&gt;<span class="hljs-number">1</span>], i = l<span class="hljs-number">-1</span>, j = r+<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span> (i &lt; j)<br>    &#123;<br>        <span class="hljs-keyword">while</span> (a[++ i] &lt; x);<br>        <span class="hljs-keyword">while</span> (a[-- j] &gt; x);<br>        <span class="hljs-keyword">if</span> (i &lt; j) swap(a[i], a[j]);<br>    &#125;<br>    sort(l, j), sort(j+<span class="hljs-number">1</span>, r);<br>&#125;<br><span class="hljs-number">6</span>归并排序<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">merge_sort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> l, <span class="hljs-keyword">int</span> r)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span> (l &gt;= r) <span class="hljs-keyword">return</span>;<br>    <span class="hljs-keyword">int</span> temp[N];<br>    <span class="hljs-keyword">int</span> mid = l+r&gt;&gt;<span class="hljs-number">1</span>;<br>    merge_sort(l, mid), merge_sort(mid+<span class="hljs-number">1</span>, r);<br>    <span class="hljs-keyword">int</span> k = <span class="hljs-number">0</span>, i = l, j = mid+<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span> (i &lt;= mid &amp;&amp; j &lt;= r)<br>    &#123;<br>        <span class="hljs-keyword">if</span> (a[i] &lt; a[j]) temp[k ++ ] = a[i ++ ];<br>        <span class="hljs-keyword">else</span> temp[k ++ ] = a[j ++ ];<br><br>    &#125;<br>    <span class="hljs-keyword">while</span> (i &lt;= mid) temp[k ++ ] = a[i ++ ];<br>    <span class="hljs-keyword">while</span> (j &lt;= r) temp[k ++ ] = a[j ++ ];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = l, j = <span class="hljs-number">0</span>; i &lt;= r; i ++ , j ++ ) a[i] = temp[j];<br>&#125;<br><span class="hljs-number">7</span>堆排序（须知此排序为使用了模拟堆，为了使最后一个非叶子节点的编号为n/<span class="hljs-number">2</span>，数组编号从<span class="hljs-number">1</span>开始）<br>https:<span class="hljs-comment">//www.cnblogs.com/wanglei5205/p/8733524.html</span><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">down</span><span class="hljs-params">(<span class="hljs-keyword">int</span> u)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> t = u;<br>    <span class="hljs-keyword">if</span> (u&lt;&lt;<span class="hljs-number">1</span> &lt;= n &amp;&amp; h[u&lt;&lt;<span class="hljs-number">1</span>] &lt; h[t]) t = u&lt;&lt;<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">if</span> ((u&lt;&lt;<span class="hljs-number">1</span>|<span class="hljs-number">1</span>) &lt;= n &amp;&amp; h[u&lt;&lt;<span class="hljs-number">1</span>|<span class="hljs-number">1</span>] &lt; h[t]) t = u&lt;&lt;<span class="hljs-number">1</span>|<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">if</span> (u != t)<br>    &#123;<br>        swap(h[u], h[t]);<br>        down(t);<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i ++ ) <span class="hljs-built_in">cin</span> &gt;&gt; h[i];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = n/<span class="hljs-number">2</span>; i; i -- ) down(i);<br>    <span class="hljs-keyword">while</span> (<span class="hljs-literal">true</span>)<br>    &#123;<br>        <span class="hljs-keyword">if</span> (!n) <span class="hljs-keyword">break</span>;<br>        <span class="hljs-built_in">cout</span> &lt;&lt; h[<span class="hljs-number">1</span>] &lt;&lt; <span class="hljs-string">&#x27; &#x27;</span>;<br>        h[<span class="hljs-number">1</span>] = h[n];<br>        n -- ;<br>        down(<span class="hljs-number">1</span>);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-number">8</span>基数排序<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">maxbit</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> maxv = a[<span class="hljs-number">0</span>];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt; n; i ++ )<br>        <span class="hljs-keyword">if</span> (maxv &lt; a[i])<br>            maxv = a[i];<br>    <span class="hljs-keyword">int</span> cnt = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span> (maxv &gt;= <span class="hljs-number">10</span>) maxv /= <span class="hljs-number">10</span>, cnt ++ ;<br><br>    <span class="hljs-keyword">return</span> cnt;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">radixsort</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> t = maxbit();<br>    <span class="hljs-keyword">int</span> radix = <span class="hljs-number">1</span>;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= t; i ++ )<br>    &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">10</span>; j ++ ) count[j] = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; n; j ++ )<br>        &#123;<br>            <span class="hljs-keyword">int</span> k = (a[j] / radix) % <span class="hljs-number">10</span>;<br>            count[k] ++ ;<br>        &#125;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">1</span>; j &lt; <span class="hljs-number">10</span>; j ++ ) count[j] += count[j<span class="hljs-number">-1</span>];<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = n<span class="hljs-number">-1</span>; j &gt;= <span class="hljs-number">0</span>; j -- )<br>        &#123;<br>            <span class="hljs-keyword">int</span> k = (a[j] / radix) % <span class="hljs-number">10</span>;<br>            temp[count[k]<span class="hljs-number">-1</span>] = a[j];<br>            count[k] -- ;<br>        &#125;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; n; j ++ ) a[j] = temp[j];<br>        radix *= <span class="hljs-number">10</span>;<br>    &#125;<br><br>&#125;<br><span class="hljs-number">9</span>计数排序<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">counting_sort</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> sorted[N];<br>    <span class="hljs-keyword">int</span> maxv = a[<span class="hljs-number">0</span>];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt; n; i ++ )<br>        <span class="hljs-keyword">if</span> (maxv &lt; a[i])<br>            maxv = a[i];<br>    <span class="hljs-keyword">int</span> count[maxv+<span class="hljs-number">1</span>];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i ++ ) count[a[i]] ++ ;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= maxv; i ++ ) count[i] += count[i<span class="hljs-number">-1</span>];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = n<span class="hljs-number">-1</span>; i &gt;= <span class="hljs-number">0</span>; i -- )<br>    &#123;<br>        sorted[count[a[i]]<span class="hljs-number">-1</span>] = a[i];<br>        count[a[i]] -- ;<br>    &#125;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i ++ ) a[i] = sorted[i];<br>&#125;<br><span class="hljs-number">10</span>桶排序（基数排序是桶排序的特例，优势是可以处理浮点数和负数，劣势是还要配合别的排序函数）<br><br><span class="hljs-function"><span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt; <span class="hljs-title">bucketSort</span><span class="hljs-params">(<span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt;&amp; nums)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> n = nums.size();<br>    <span class="hljs-keyword">int</span> maxv = *max_element(nums.begin(), nums.end());<br>    <span class="hljs-keyword">int</span> minv = *min_element(nums.begin(), nums.end());<br>    <span class="hljs-keyword">int</span> bs = <span class="hljs-number">1000</span>;<br>    <span class="hljs-keyword">int</span> m = (maxv-minv)/bs+<span class="hljs-number">1</span>;<br>    <span class="hljs-built_in">vector</span>&lt;<span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt; &gt; bucket(m);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; ++i) &#123;<br>        bucket[(nums[i]-minv)/bs].push_back(nums[i]);<br>    &#125;<br>    <span class="hljs-keyword">int</span> idx = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; m; ++i) &#123;<br>        <span class="hljs-keyword">int</span> sz = bucket[i].size();<br>        bucket[i] = quickSort(bucket[i]);<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; sz; ++j) &#123;<br>            nums[idx++] = bucket[i][j];<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> nums;<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>unity快捷键</title>
    <link href="/2021/01/08/Unity%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <url>/2021/01/08/Unity%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="unity快捷键"><a href="#unity快捷键" class="headerlink" title="unity快捷键"></a>unity快捷键</h1><h2 id="一、变换工具-6个"><a href="#一、变换工具-6个" class="headerlink" title="一、变换工具 6个"></a>一、变换工具 6个</h2><p><strong>快捷键Q–Hand（手形）工具 可以平移整个Scene视图</strong></p><p><strong>快捷键W–Translate（移动）工具 移动所选择的游戏对象</strong></p><p><strong>快捷键E–Rotate（旋转）工具 按任意角度旋转游戏对象</strong></p><p><strong>快捷键R–Scale（缩放）工具 缩放选中的游戏对象</strong></p><p>快捷键T–横切面工具 可以沿着横截面缩放，沿着横截面的中心点旋转</p><p>快捷键Z–Center工具 改变游戏对象的轴心点</p><p>快捷键X–Local工具 改变物体的坐标</p><h2 id="二、播放控件-3个"><a href="#二、播放控件-3个" class="headerlink" title="二、播放控件 3个"></a>二、播放控件 3个</h2><p>Ctrl+P–播放按钮 播放/运行，对游戏场景进行预览</p><p>Ctrl+Shift+P–暂停按钮 暂停/中断，停止预览</p><p>Ctrl+Alt+P–逐帧播放按钮 单帧进行预览</p><h2 id="三、File（文件）菜单快捷键-6个"><a href="#三、File（文件）菜单快捷键-6个" class="headerlink" title="三、File（文件）菜单快捷键 6个"></a>三、File（文件）菜单快捷键 6个</h2><p>Ctrl+N–New Scene 新建场景</p><p>Ctrl+O–Open Scene 打开场景</p><p>Ctrl+S–Save Scene 保存场景</p><p>Ctrl+Shift+S–Save Scene as 场景另存为</p><p>Ctrl+Shift+B–Build Setings 发布设置</p><p>Ctrl+B–Build &amp; Run 发布并运行</p><h2 id="四、Edit（编辑）菜单-11个"><a href="#四、Edit（编辑）菜单-11个" class="headerlink" title="四、Edit（编辑）菜单 11个"></a>四、Edit（编辑）菜单 11个</h2><p>（在Mac机中，用command键替换Ctrl，以下出现的Ctrl均同）</p><p><strong>Ctrl+Z–Undo Selection Change 撤销上一步操作</strong></p><p><strong>Ctrl+Y–Redo 反撤销（mac机为command+Shift+Z）</strong></p><p>Ctrl+X–Cut 剪切</p><p>Ctrl+C–Copy 复制</p><p>Ctrl+V–Paste 粘贴</p><p>Ctrl+D–Duplicate 复制并粘贴 </p><p>Shift+Del–Delete 删除（mac机位command+Del）</p><p>快捷键F–Frame Selected 居中并最大化当前选中的物体</p><p>Ctrl+F–Find 搜索，按照名称查找物体</p><p>Shift+F–Lock view to Selected 锁定搜索到的物体</p><p>Ctrl+A–Select All 选择全部</p><h2 id="五、Assets菜单快捷键-1个"><a href="#五、Assets菜单快捷键-1个" class="headerlink" title="五、Assets菜单快捷键 1个"></a>五、Assets菜单快捷键 1个</h2><p>Ctrl+R–Refresh 刷新场景</p><h2 id="六、GameObject菜单快捷键-5个"><a href="#六、GameObject菜单快捷键-5个" class="headerlink" title="六、GameObject菜单快捷键 5个"></a>六、GameObject菜单快捷键 5个</h2><p>Ctrl+Shift+N–Create Empty 创建一个空的游戏对象</p><p>Alt+Shift+N–Create Empty Child 创建一个空的子物体</p><p>Ctrl+Alt+F–Move to New 移动游戏对象到视图的中心点</p><p>Ctrl+Shift+F–Align With View</p><p>Alt+Shift+A–Toggle Active Stave</p><h2 id="七、Component菜单快捷键"><a href="#七、Component菜单快捷键" class="headerlink" title="七、Component菜单快捷键"></a>七、Component菜单快捷键</h2><p>Ctrl+Shift+A–add 添加组件</p><h2 id="八、切换视图快捷键-12个"><a href="#八、切换视图快捷键-12个" class="headerlink" title="八、切换视图快捷键 12个"></a>八、切换视图快捷键 12个</h2><p>Ctrl+Tab切换–next Windows 下个窗口</p><p>Ctrl+Shift+Tab切换–Previous Windows 上个窗口</p><p>Ctrl+1切换–Scene视图</p><p>Ctrl+2切换–Game视图</p><p>Ctrl+3切换–Inspector视图</p><p>Ctrl+4切换–Hierarchy视图</p><p>Ctrl+5切换–Project视图</p><p>Ctrl+6切换–Animation视图</p><p>Ctrl+7切换–Profiler视图</p><p>Ctrl+9切换–Asset Store Unity资源商店</p><p>Ctrl+0切换–Asset Server 资源服务器</p><p>Ctrl+Shift+C切换–Console 控制台</p><p>以上三~八为菜单栏快捷键</p><h2 id="九、操作Scene视图的快捷键"><a href="#九、操作Scene视图的快捷键" class="headerlink" title="九、操作Scene视图的快捷键"></a>九、操作Scene视图的快捷键</h2><p>Alt+鼠标左键–旋转视图</p><p>Alt+鼠标右键–放大缩小视图</p><p>Alt+鼠标中键–移动视图</p><p>鼠标右键+w/s/a/d–向上/下/左/右 飞行浏览视图</p><p>鼠标右键+w/s/a/d+Shift–向上/下/左/右 快速飞行浏览视图</p><h2 id="十、※特好用快捷键※"><a href="#十、※特好用快捷键※" class="headerlink" title="十、※特好用快捷键※"></a><strong>十、※特好用快捷键</strong>※</h2><p>Alt + 文件夹小箭头–展开或关闭所有层级</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>markdown语法</title>
    <link href="/2021/01/07/markdown%E8%AF%AD%E6%B3%95/"/>
    <url>/2021/01/07/markdown%E8%AF%AD%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="markdown语法"><a href="#markdown语法" class="headerlink" title="markdown语法"></a>markdown语法</h1><p>[官方教程地址](<a href="https://markdown.com.cn/intro.html">Markdown 入门基础 | Markdown 官方教程</a>)</p><h2 id="常用语法"><a href="#常用语法" class="headerlink" title="常用语法"></a>常用语法</h2><h3 id="1-代码块"><a href="#1-代码块" class="headerlink" title="1. 代码块"></a>1. 代码块</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">//代码块</span><br>```C<br></code></pre></td></tr></table></figure><h3 id="2-标题"><a href="#2-标题" class="headerlink" title="2.标题"></a><strong>2.标题</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c"># 一级标题<br>## 二级标题<br>...依次类推<br></code></pre></td></tr></table></figure><h3 id="3-图片"><a href="#3-图片" class="headerlink" title="3.图片"></a><strong>3.图片</strong></h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">本地图片-&gt;  ![本地图片](..<span class="hljs-regexp">/img/</span>壁纸<span class="hljs-number">1</span>.png)<br>联网图片-&gt;  ![联网图片](https:<span class="hljs-regexp">//</span>th.wallhaven.cc<span class="hljs-regexp">/small/</span>pk/pkw6y3.jpg)<br></code></pre></td></tr></table></figure><p>本地图片-&gt;  <img src="../img/%E5%A3%81%E7%BA%B81.png" alt="本地图片"><br>联网图片-&gt;  <img src="https://w.wallhaven.cc/full/pk/wallhaven-pkgkkp.png"></p><h3 id="4-字体格式"><a href="#4-字体格式" class="headerlink" title="4.字体格式"></a><strong>4.字体格式</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">//加粗 Ctrl+B</span><br>**加粗**  <br><span class="hljs-comment">//删除</span><br>~~删除~~<br><span class="hljs-comment">//斜体 Ctrl+I</span><br>*斜体*<br></code></pre></td></tr></table></figure><ul><li><strong>加粗</strong> </li><li><del>删除</del></li><li><em>斜体</em></li></ul><h3 id="5-引用"><a href="#5-引用" class="headerlink" title="5.引用"></a><strong>5.引用</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">&gt; 我只是引用<br></code></pre></td></tr></table></figure><blockquote><p>我只是引用</p></blockquote><h3 id="6-分割线"><a href="#6-分割线" class="headerlink" title="6.分割线"></a><strong>6.分割线</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">---<br></code></pre></td></tr></table></figure><hr><h3 id="7-无序列表"><a href="#7-无序列表" class="headerlink" title="7.无序列表"></a><strong>7.无序列表</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c">- 我是无序列表  <br>+ 我是无序列表 <br>* 我是无序列表<br>  <br><span class="hljs-number">1.</span> 我是无序列表 <br></code></pre></td></tr></table></figure><ul><li>我是无序列表 </li></ul><ul><li>我是无序列表 </li></ul><ul><li>我是无序列表 </li></ul><ol><li>我是无序列表 </li></ol><h3 id="8-表格"><a href="#8-表格" class="headerlink" title="8.表格"></a><strong>8.表格</strong></h3><blockquote><p>这里建议直接右键 🤭</p><p>或者 Ctrl + T</p></blockquote><table><thead><tr><th align="left">姓名</th><th>学号</th><th>成绩</th></tr></thead><tbody><tr><td align="left"></td><td></td><td></td></tr></tbody></table><h3 id="9-超链接"><a href="#9-超链接" class="headerlink" title="9.超链接"></a><strong>9.超链接</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">[我是超链接](https:<span class="hljs-comment">//meiyingg.github.io/)</span><br></code></pre></td></tr></table></figure><p><a href="https://meiyingg.github.io/">我是超链接</a></p><h2 id="进阶语法"><a href="#进阶语法" class="headerlink" title="进阶语法"></a><strong>进阶语法</strong></h2><h3 id="1-任务列表"><a href="#1-任务列表" class="headerlink" title="1.任务列表"></a><strong>1.任务列表</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c">- [x] 我是任务列表<br>- [ ] 单击修改完成状态<br></code></pre></td></tr></table></figure><ul><li><p><input disabled="" type="checkbox">  我是任务列表</p></li><li><p><input disabled="" type="checkbox">  单击修改完成状态</p></li></ul><h3 id="2-图片细调"><a href="#2-图片细调" class="headerlink" title="2.图片细调"></a><strong>2.图片细调</strong></h3><p><img src="https://img-blog.csdnimg.cn/20200822014538211.png#pic_left" alt="我是居左图片"></p><h2 id="有意思的其他语法"><a href="#有意思的其他语法" class="headerlink" title="有意思的其他语法"></a><strong>有意思的其他语法</strong></h2><h3 id="1-标题模板"><a href="#1-标题模板" class="headerlink" title="1.标题模板"></a><strong>1.标题模板</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c">---<br>title: 标题<br>date: <span class="hljs-number">2021</span><span class="hljs-number">-1</span><span class="hljs-number">-3</span><br>layout: 还不懂<br>excerpt: 解释用的<br>index_img: 封面地址<br>---<br></code></pre></td></tr></table></figure><blockquote><p>不好展示，开头自带</p></blockquote><h3 id="2-内嵌网页"><a href="#2-内嵌网页" class="headerlink" title="2.内嵌网页"></a><strong>2.内嵌网页</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c">&lt;iframe src=<span class="hljs-string">&quot;https://meiyingg.github.io/&quot;</span> width=<span class="hljs-string">&quot;100%&quot;</span> height=<span class="hljs-string">&quot;800&quot;</span> name=<span class="hljs-string">&quot;topFrame&quot;</span> scrolling=<span class="hljs-string">&quot;yes&quot;</span>  noresize=<span class="hljs-string">&quot;noresize&quot;</span> frameborder=<span class="hljs-string">&quot;0&quot;</span> id=<span class="hljs-string">&quot;topFrame&quot;</span>&gt;<br> &lt;/iframe&gt;<br></code></pre></td></tr></table></figure><iframe src="https://meiyingg.github.io/" width="100%" height="800" name="topFrame" scrolling="yes"  noresize="noresize" frameborder="0" id="topFrame"> </iframe><h3 id="3-插入目录"><a href="#3-插入目录" class="headerlink" title="3.插入目录"></a><strong>3.插入目录</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">[TOC]<br></code></pre></td></tr></table></figure><p>[TOC] </p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>期末复习法宝</title>
    <link href="/2021/01/03/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0%E6%B3%95%E5%AE%9D/"/>
    <url>/2021/01/03/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0%E6%B3%95%E5%AE%9D/</url>
    
    <content type="html"><![CDATA[<p style="text-align:center;color:#8EC0E4;font-size:1.5em;font-weight: bold;">期末复习法宝</p><p>普通玩家-&gt;<a href="http://www.wesane.com/game/910/">网址入口</a></p><p>视野加成buff版本-&gt;</p><iframe src="https://www.mutegame.com/170/" width="110%" height="100%" name="topFrame" scrolling="no"  noresize="noresize" frameborder="1" id="topFrame"> </iframe><!--PC版--><div id="SOHUCS" ></div><script charset="utf-8" type="text/javascript" src="https://cy-cdn.kuaizhan.com/upload/changyan.js" ></script><script type="text/javascript">window.changyan.api.config({appid: 'cyvQ9FbUr',conf: 'prod_e9bd67443b6486cbb67b6fbd83c3be60'});</script>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
